const fs = require('fs');

const txtToJson = (inputFile, outputFile) => {
  const data = {};

  const content = fs.readFileSync(inputFile, 'utf-8');
  const lines = content.split('\n');

  lines.forEach(line => {
      const [key, value] = line.trim().split('\t');
      data[key] = key;
  });

  fs.writeFileSync(outputFile, JSON.stringify(data, null, 2), 'utf-8');
}

// txtToJson('../utils/data/cjdict.txt', 'output.json');

const hiragana = [
  "あ",
  "い",
  "う",
  "え",
  "お",
  "か",
  "き",
  "く",
  "け",
  "こ",
  "さ",
  "し",
  "す",
  "せ",
  "そ",
  "た",
  "ち",
  "つ",
  "て",
  "と",
  "な",
  "に",
  "ぬ",
  "ね",
  "の",
  "は",
  "ひ",
  "ふ",
  "へ",
  "ほ",
  "ま",
  "み",
  "む",
  "め",
  "も",
  "や",
  "ゆ",
  "よ",
  "ら",
  "り",
  "る",
  "れ",
  "ろ",
  "わ",
  "を",
  "ん",
  "が",
  "ぎ",
  "ぐ",
  "げ",
  "ご",
  "ざ",
  "じ",
  "ず",
  "ぜ",
  "ぞ",
  "だ",
  "ぢ",
  "づ",
  "で",
  "ど",
  "ば",
  "び",
  "ぶ",
  "べ",
  "ぼ",
  "ぱ",
  "ぴ",
  "ぷ",
  "ぺ",
  "ぽ",
  "きゃ",
  "きゅ",
  "きょ",
  "しゃ",
  "しゅ",
  "しょ",
  "ちゃ",
  "ちゅ",
  "ちょ",
  "にゃ",
  "にゅ",
  "にょ",
  "ひゃ",
  "ひゅ",
  "ひょ",
  "みゃ",
  "みゅ",
  "みょ",
  "りゃ",
  "りゅ",
  "りょ",
  "ぎゃ",
  "ぎゅ",
  "ぎょ",
  "じゃ",
  "じゅ",
  "じょ",
  "びゃ",
  "びゅ",
  "びょ",
];

const katakana = [
  "ア",
  "イ",
  "ウ",
  "エ",
  "オ",
  "カ",
  "キ",
  "ク",
  "ケ",
  "コ",
  "サ",
  "シ",
  "ス",
  "セ",
  "ソ",
  "タ",
  "チ",
  "ツ",
  "テ",
  "ト",
  "ナ",
  "ニ",
  "ヌ",
  "ネ",
  "ノ",
  "ハ",
  "ヒ",
  "フ",
  "ヘ",
  "ホ",
  "マ",
  "ミ",
  "ム",
  "メ",
  "モ",
  "ヤ",
  "ユ",
  "ヨ",
  "ラ",
  "リ",
  "ル",
  "レ",
  "ロ",
  "ワ",
  "ヲ",
  "ン",
  "ガ",
  "ギ",
  "グ",
  "ゲ",
  "ゴ",
  "ザ",
  "ジ",
  "ズ",
  "ゼ",
  "ゾ",
  "ダ",
  "ヂ",
  "ヅ",
  "デ",
  "ド",
  "バ",
  "ビ",
  "ブ",
  "ベ",
  "ボ",
  "パ",
  "ピ",
  "プ",
  "ペ",
  "ポ",
  "キャ",
  "キュ",
  "キョ",
  "シャ",
  "シュ",
  "ショ",
  "チャ",
  "チュ",
  "チョ",
  "ニャ",
  "ニュ",
  "ニョ",
  "ヒャ",
  "ヒュ",
  "ヒョ",
  "ミャ",
  "ミュ",
  "ミョ",
  "リャ",
  "リュ",
  "リョ",
  "ギャ",
  "ギュ",
  "ギョ",
  "ジャ",
  "ジュ",
  "ジョ",
  "ビャ",
  "ビュ",
  "ビョ",
];

const isKanjiWord = (word) => {
  const kanjiRegex = /[\u3400-\u9FBF]/;
  return kanjiRegex.test(word);
};

module.exports = {
  hiragana,
  katakana,
  isKanjiWord,
};